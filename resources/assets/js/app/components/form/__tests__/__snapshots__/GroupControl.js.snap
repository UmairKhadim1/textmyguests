// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GroupControl Tests should render without crash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GroupControl
    disableIfAll={false}
    groups={
      Array [
        Object {
          "id": 1,
          "name": "Group",
        },
      ]
    }
    onChange={[Function]}
    selected={Object {}}
    showAll={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div>
          <Checkbox
            checked={false}
            indeterminate={false}
            onChange={[Function]}
            prefixCls="ant-checkbox"
          >
            All Guests
          </Checkbox>
        </div>,
        Array [
          <div>
            <Checkbox
              checked={false}
              disabled={false}
              indeterminate={false}
              onChange={[Function]}
              prefixCls="ant-checkbox"
            >
              Group
            </Checkbox>
          </div>,
        ],
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "all",
        "nodeType": "host",
        "props": Object {
          "children": <Checkbox
            checked={false}
            indeterminate={false}
            onChange={[Function]}
            prefixCls="ant-checkbox"
          >
            All Guests
          </Checkbox>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "checked": false,
            "children": "All Guests",
            "indeterminate": false,
            "onChange": [Function],
            "prefixCls": "ant-checkbox",
          },
          "ref": null,
          "rendered": "All Guests",
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "host",
        "props": Object {
          "children": <Checkbox
            checked={false}
            disabled={false}
            indeterminate={false}
            onChange={[Function]}
            prefixCls="ant-checkbox"
          >
            Group
          </Checkbox>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "checked": false,
            "children": "Group",
            "disabled": false,
            "indeterminate": false,
            "onChange": [Function],
            "prefixCls": "ant-checkbox",
          },
          "ref": null,
          "rendered": "Group",
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            <Checkbox
              checked={false}
              indeterminate={false}
              onChange={[Function]}
              prefixCls="ant-checkbox"
            >
              All Guests
            </Checkbox>
          </div>,
          Array [
            <div>
              <Checkbox
                checked={false}
                disabled={false}
                indeterminate={false}
                onChange={[Function]}
                prefixCls="ant-checkbox"
              >
                Group
              </Checkbox>
            </div>,
          ],
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "all",
          "nodeType": "host",
          "props": Object {
            "children": <Checkbox
              checked={false}
              indeterminate={false}
              onChange={[Function]}
              prefixCls="ant-checkbox"
            >
              All Guests
            </Checkbox>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "checked": false,
              "children": "All Guests",
              "indeterminate": false,
              "onChange": [Function],
              "prefixCls": "ant-checkbox",
            },
            "ref": null,
            "rendered": "All Guests",
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "host",
          "props": Object {
            "children": <Checkbox
              checked={false}
              disabled={false}
              indeterminate={false}
              onChange={[Function]}
              prefixCls="ant-checkbox"
            >
              Group
            </Checkbox>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "checked": false,
              "children": "Group",
              "disabled": false,
              "indeterminate": false,
              "onChange": [Function],
              "prefixCls": "ant-checkbox",
            },
            "ref": null,
            "rendered": "Group",
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`GroupControl Tests should render without scratch 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GroupControl
    disableIfAll={false}
    groups={
      Array [
        Object {
          "id": 1,
          "name": "Group",
        },
      ]
    }
    onChange={[Function]}
    selected={Object {}}
    showAll={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div>
          <Checkbox
            checked={false}
            indeterminate={false}
            onChange={[Function]}
            prefixCls="ant-checkbox"
          >
            All Guests
          </Checkbox>
        </div>,
        Array [
          <div>
            <Checkbox
              checked={false}
              disabled={false}
              indeterminate={false}
              onChange={[Function]}
              prefixCls="ant-checkbox"
            >
              Group
            </Checkbox>
          </div>,
        ],
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "all",
        "nodeType": "host",
        "props": Object {
          "children": <Checkbox
            checked={false}
            indeterminate={false}
            onChange={[Function]}
            prefixCls="ant-checkbox"
          >
            All Guests
          </Checkbox>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "checked": false,
            "children": "All Guests",
            "indeterminate": false,
            "onChange": [Function],
            "prefixCls": "ant-checkbox",
          },
          "ref": null,
          "rendered": "All Guests",
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "host",
        "props": Object {
          "children": <Checkbox
            checked={false}
            disabled={false}
            indeterminate={false}
            onChange={[Function]}
            prefixCls="ant-checkbox"
          >
            Group
          </Checkbox>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "checked": false,
            "children": "Group",
            "disabled": false,
            "indeterminate": false,
            "onChange": [Function],
            "prefixCls": "ant-checkbox",
          },
          "ref": null,
          "rendered": "Group",
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            <Checkbox
              checked={false}
              indeterminate={false}
              onChange={[Function]}
              prefixCls="ant-checkbox"
            >
              All Guests
            </Checkbox>
          </div>,
          Array [
            <div>
              <Checkbox
                checked={false}
                disabled={false}
                indeterminate={false}
                onChange={[Function]}
                prefixCls="ant-checkbox"
              >
                Group
              </Checkbox>
            </div>,
          ],
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "all",
          "nodeType": "host",
          "props": Object {
            "children": <Checkbox
              checked={false}
              indeterminate={false}
              onChange={[Function]}
              prefixCls="ant-checkbox"
            >
              All Guests
            </Checkbox>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "checked": false,
              "children": "All Guests",
              "indeterminate": false,
              "onChange": [Function],
              "prefixCls": "ant-checkbox",
            },
            "ref": null,
            "rendered": "All Guests",
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "host",
          "props": Object {
            "children": <Checkbox
              checked={false}
              disabled={false}
              indeterminate={false}
              onChange={[Function]}
              prefixCls="ant-checkbox"
            >
              Group
            </Checkbox>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "checked": false,
              "children": "Group",
              "disabled": false,
              "indeterminate": false,
              "onChange": [Function],
              "prefixCls": "ant-checkbox",
            },
            "ref": null,
            "rendered": "Group",
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`GroupControl Tests should render without the all guest checkbox 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GroupControl
    disableIfAll={false}
    groups={
      Array [
        Object {
          "id": 1,
          "name": "Group",
        },
      ]
    }
    onChange={[Function]}
    selected={Object {}}
    showAll={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        null,
        Array [
          <div>
            <Checkbox
              checked={false}
              disabled={false}
              indeterminate={false}
              onChange={[Function]}
              prefixCls="ant-checkbox"
            >
              Group
            </Checkbox>
          </div>,
        ],
      ],
    },
    "ref": null,
    "rendered": Array [
      null,
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "host",
        "props": Object {
          "children": <Checkbox
            checked={false}
            disabled={false}
            indeterminate={false}
            onChange={[Function]}
            prefixCls="ant-checkbox"
          >
            Group
          </Checkbox>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "checked": false,
            "children": "Group",
            "disabled": false,
            "indeterminate": false,
            "onChange": [Function],
            "prefixCls": "ant-checkbox",
          },
          "ref": null,
          "rendered": "Group",
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          null,
          Array [
            <div>
              <Checkbox
                checked={false}
                disabled={false}
                indeterminate={false}
                onChange={[Function]}
                prefixCls="ant-checkbox"
              >
                Group
              </Checkbox>
            </div>,
          ],
        ],
      },
      "ref": null,
      "rendered": Array [
        null,
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "host",
          "props": Object {
            "children": <Checkbox
              checked={false}
              disabled={false}
              indeterminate={false}
              onChange={[Function]}
              prefixCls="ant-checkbox"
            >
              Group
            </Checkbox>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "checked": false,
              "children": "Group",
              "disabled": false,
              "indeterminate": false,
              "onChange": [Function],
              "prefixCls": "ant-checkbox",
            },
            "ref": null,
            "rendered": "Group",
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
